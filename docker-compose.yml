version: "3.7"

networks:
  ddlmain-network:

volumes:
  dbdata:
    driver: local

services:
  web:
    image: nginx:stable-alpine
    container_name: web
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/ddlmain.local.conf:/etc/nginx/conf.d/ddlmain.local.conf
    depends_on:
      - app
      - db
    networks:
      - ddlmain-network
  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/db.cnf:/etc/mysql/conf.d/my.cnf
      - dbdata:/var/lib/mysql
    networks:
      - ddlmain-network
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - ddlmain-network
  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./:/var/www
    working_dir: /var/www
    depends_on:
      - php
    networks:
      - ddlmain-network
  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./:/var/www
    working_dir: /var/www
    entrypoint: ['npm']
    networks:
      - ddlmain-network
  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      -  ./:/var/www
    depends_on:
      - db
    working_dir: /var/www
    entrypoint: ['php', '/var/www/artisan']
    networks:
      - ddlmain-network
