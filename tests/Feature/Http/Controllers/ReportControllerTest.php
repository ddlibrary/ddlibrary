<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\ReportController
 */
class ReportControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function ga_report_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('admin/reports/ga');

        $response->assertOk();
        $response->assertViewIs('admin.reports.reportsga');
        $response->assertViewHas('totalVisitorsAndPageViews');
        $response->assertViewHas('mostVisitedPages');
        $response->assertViewHas('topReferrers');
        $response->assertViewHas('userTypes');
        $response->assertViewHas('topBrowsers');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function resource_language_report_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $resources = \App\Models\Resource::factory()->times(3)->create();
        $taxonomyTerms = \App\Models\TaxonomyTerm::factory()->times(3)->create();
        $resourceLevels = \App\Models\ResourceLevel::factory()->times(3)->create();

        $response = $this->get('admin/reports/languages');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function resource_priorities_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $taxonomyTerms = \App\Models\TaxonomyTerm::factory()->times(3)->create();

        $response = $this->get('resources/priorities');

        $response->assertOk();
        $response->assertViewIs('reports.priorities');
        $response->assertViewHas('subjects_list');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function resource_priorities_exclusion_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $taxonomyTerms = \App\Models\TaxonomyTerm::factory()->times(3)->create();

        $response = $this->get('resources/priorities/exclusion');

        $response->assertOk();
        $response->assertViewIs('reports.exclusion');
        $response->assertViewHas('subjects_list');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function resource_priorities_exclusion_modify_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $taxonomyTerm = \App\Models\TaxonomyTerm::factory()->create();
        $report = \App\Models\Report::factory()->create();

        $response = $this->post('resources/priorities/exclusion/add/{id}', [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function resource_report_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('admin/reports/resources');

        $response->assertOk();
        $response->assertViewIs('admin.reports.resource_reports');
        $response->assertViewHas('supported_locales');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function resource_subject_report_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $taxonomyTerms = \App\Models\TaxonomyTerm::factory()->times(3)->create();
        $resourceSubjectAreas = \App\Models\ResourceSubjectArea::factory()->times(3)->create();
        $resourceLevels = \App\Models\ResourceLevel::factory()->times(3)->create();

        $response = $this->get('admin/reports/resources/subjects');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
