<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\StoryWeaverController
 */
class StoryWeaverControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function story_weaver_auth_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $userProfile = \App\Models\UserProfile::factory()->create();

        $response = $this->get(route('storyweaver-auth'));

        $response->assertRedirect(away($response_contents->redirect_url));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function story_weaver_auth_aborts_with_a_500(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $userProfile = \App\Models\UserProfile::factory()->create();

        // TODO: perform additional setup to trigger `abort(500)`...

        $response = $this->get(route('storyweaver-auth'));

        $response->assertStatus(500);
    }

    /**
     * @test
     */
    public function story_weaver_auth_aborts_with_a_405(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $userProfile = \App\Models\UserProfile::factory()->create();

        // TODO: perform additional setup to trigger `abort(405)`...

        $response = $this->get(route('storyweaver-auth'));

        $response->assertStatus(405);
    }

    /**
     * @test
     */
    public function story_weaver_auth_aborts_with_a_422(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $userProfile = \App\Models\UserProfile::factory()->create();

        // TODO: perform additional setup to trigger `abort(422)`...

        $response = $this->get(route('storyweaver-auth'));

        $response->assertUnprocessable();
    }

    /**
     * @test
     */
    public function story_weaver_auth_aborts_with_a_500(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $userProfile = \App\Models\UserProfile::factory()->create();

        // TODO: perform additional setup to trigger `abort(500)`...

        $response = $this->get(route('storyweaver-auth'));

        $response->assertStatus(500);
    }

    /**
     * @test
     */
    public function story_weaver_confirmation_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $userProfile = \App\Models\UserProfile::factory()->create();

        $response = $this->get(route('storyweaver-confirm', ['landing_page' => $landing_page]));

        $response->assertRedirect(route('storyweaver-auth'));

        // TODO: perform additional assertions
    }

    // test cases...
}
