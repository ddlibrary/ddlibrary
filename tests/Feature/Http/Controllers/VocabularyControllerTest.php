<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\VocabularyController
 */
class VocabularyControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function create_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('vocabularycreate'));

        $response->assertOk();
        $response->assertViewIs('admin.vocabulary.vocabulary_create');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $taxonomyVocabulary = \App\Models\TaxonomyVocabulary::factory()->create();

        $response = $this->get(route('vocabularyedit', ['vid' => $vid]));

        $response->assertOk();
        $response->assertViewIs('admin.vocabulary.vocabulary_edit');
        $response->assertViewHas('vocabulary');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_vocabularies_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('getvocabularies'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('vocabularylist'));

        $response->assertOk();
        $response->assertViewIs('admin.vocabulary.vocabulary_list');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('vocabularystore'), [
            // TODO: send request data
        ]);

        $response->assertRedirect('/admin/vocabulary');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $taxonomyVocabulary = \App\Models\TaxonomyVocabulary::factory()->create();

        $response = $this->post(route('vocabularyedit', ['vid' => $vid]), [
            // TODO: send request data
        ]);

        $response->assertRedirect('/admin/vocabulary');

        // TODO: perform additional assertions
    }

    // test cases...
}
