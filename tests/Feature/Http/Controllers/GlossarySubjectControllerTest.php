<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\GlossarySubjectController
 */
class GlossarySubjectControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function create_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('admin/glossary_subjects/create');

        $response->assertOk();
        $response->assertViewIs('admin.glossary.glossary_subject_edit');
        $response->assertViewHas('glossary_subject');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $glossarySubject = \App\Models\GlossarySubject::factory()->create();

        $response = $this->get('admin/glossary_subjects/edit/{id}');

        $response->assertOk();
        $response->assertViewIs('admin.glossary.glossary_subject_edit');
        $response->assertViewHas('glossary_subject');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $glossarySubjects = \App\Models\GlossarySubject::factory()->times(3)->create();

        $response = $this->get(route('glossary_subjects_list'));

        $response->assertOk();
        $response->assertViewIs('admin.glossary.glossary_subject_list');
        $response->assertViewHas('glossary_subjects');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $glossarySubject = \App\Models\GlossarySubject::factory()->create();

        $response = $this->post(route('glossary_subjects_update'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('glossary_subjects_list'));

        // TODO: perform additional assertions
    }

    // test cases...
}
